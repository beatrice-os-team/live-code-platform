# 基础线程调度演示 - 时间片轮转调度
# 展示多个任务的并发执行

async def task_a():
    print("任务A开始执行")
    for i in 1, 4:
        print(f"任务A执行步骤 {i+1}")
        yield  # 让出CPU
    print("任务A执行完成")

async def task_b():
    print("任务B开始执行")
    for i in 1, 3:
        print(f"任务B执行步骤 {i+1}")
        yield  # 让出CPU
    print("任务B执行完成")

async def task_c():
    print("任务C开始执行")
    for i in 1, 2:
        print(f"任务C执行步骤 {i+1}")
        yield  # 让出CPU
    print("任务C执行完成")

# 主函数，使用时间片轮转调度
async def main():
    print("=== 时间片轮转调度演示开始 ===")
    print("每个任务轮流执行，公平分配CPU时间")
    
    # 创建并发任务 - 时间片轮转调度
    await task_a()
    await task_b()
    await task_c()
    
    print("=== 时间片轮转调度演示完成 ===")

# 执行主函数
main()
